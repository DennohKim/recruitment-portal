// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  profile       Profile?
  jobs          Job[]
  applicants    Applicant[]
}

//One to one relationship with user
model Profile {
  id     String  @id @default(cuid())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId String  @unique
}

//one to many relationship with user
model Job {
  id               String   @id @default(cuid())
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  title            String
  company          String
  company_logo     String
  location         String
  min_salary       Int?
  max_salary       Int?
  job_description  String
  job_type         String
  deadline_date    DateTime
  responsibilities String
  qualifications   String
  slug            String   @unique
  tags             Tag[]
  skills           Skill[]
  applicants       Applicant[]
  userId           String
  user             User     @relation(fields: [userId], references: [id])
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String @unique
  jobs Job[]
}

model Skill {
  id   Int    @id @default(autoincrement())
  name String @unique
  jobs Job[]
}

model Applicant {
  id   Int    @id @default(autoincrement())
  jobs Job[]
  userId           String
  user             User     @relation(fields: [userId], references: [id])
}


model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
